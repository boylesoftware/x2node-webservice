/**
 * Interface for web-service call handlers.
 *
 * @interface Handler
 * @memberof module:x2node-ws
 */
/**
 * Tell if the call is allowed from the security/permissions point of view. By
 * the time the handler is asked, the authenticated actor, if any, is set on the
 * provided service call object. Returning <code>false</code> will cause either
 * a 401 (Unauthorized) or a 403 (Forbidden) HTTP response depending on whether
 * there is an authenticated actor or not. If handler does not provide
 * <code>isAllowed()</code> method, all calls are allowed to proceed.
 *
 * @function module:x2node-ws.Handler#isAllowed
 * @param {module:x2node-ws~ServiceCall} call The call.
 * @returns {boolean} <code>true</code> if the call is allowed.
 */
/**
 * Called to respond to the HTTP method same as the function's name. The returned
 * value can be a [ServiceResponse]{@link module:x2node-ws~ServiceResponse}
 * object, an <code>Object</code>, in which case it is serialized as JSON, a
 * <code>null</code> to send back an HTTP 204 (No Content) response, or anything
 * else, in which case it is converted to a string and sent back as plain text.
 * The returned value can also be a <code>Promise</code> of any of the above. If
 * the promise is rejected with a
 * [ServiceResponse]{@link module:x2node-ws~ServiceResponse}, the response is
 * sent back to the client. If rejected with anything else, an HTTP 500 (Internal
 * Server Error) response is sent back.
 *
 * @function module:x2node-ws.Handler#[METHOD]
 * @param {module:x2node-ws~ServiceCall} call The call.
 * @returns {*} The response.
 */
